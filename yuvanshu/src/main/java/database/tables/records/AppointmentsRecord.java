/*
 * This file is generated by jOOQ.
 */
package database.tables.records;


import database.tables.Appointments;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AppointmentsRecord extends UpdatableRecordImpl<AppointmentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>appointments.id</code>.
     */
    public AppointmentsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>appointments.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>appointments.patient_name</code>.
     */
    public AppointmentsRecord setPatientName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>appointments.patient_name</code>.
     */
    public String getPatientName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>appointments.date_time</code>.
     */
    public AppointmentsRecord setDateTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>appointments.date_time</code>.
     */
    public LocalDateTime getDateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>appointments.doctor_name</code>.
     */
    public AppointmentsRecord setDoctorName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>appointments.doctor_name</code>.
     */
    public String getDoctorName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>appointments.deleated</code>.
     */
    public AppointmentsRecord setDeleated(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>appointments.deleated</code>.
     */
    public Boolean getDeleated() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppointmentsRecord
     */
    public AppointmentsRecord() {
        super(Appointments.APPOINTMENTS);
    }

    /**
     * Create a detached, initialised AppointmentsRecord
     */
    public AppointmentsRecord(Integer id, String patientName, LocalDateTime dateTime, String doctorName, Boolean deleated) {
        super(Appointments.APPOINTMENTS);

        setId(id);
        setPatientName(patientName);
        setDateTime(dateTime);
        setDoctorName(doctorName);
        setDeleated(deleated);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AppointmentsRecord
     */
    public AppointmentsRecord(database.tables.pojos.Appointments value) {
        super(Appointments.APPOINTMENTS);

        if (value != null) {
            setId(value.getId());
            setPatientName(value.getPatientName());
            setDateTime(value.getDateTime());
            setDoctorName(value.getDoctorName());
            setDeleated(value.getDeleated());
            resetChangedOnNotNull();
        }
    }
}
